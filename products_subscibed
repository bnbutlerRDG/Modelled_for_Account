-- Step 1: Extract active contracts where the contract is currently valid
WITH active_contracts AS (
    SELECT 
        SAFE_CAST(`Buyer BPID` AS STRING) AS Consumer_BPID,  -- Convert BPID to STRING for joins
        `Product Series Code` AS Product_Series_Code,  -- Use series code to avoid duplication
        `Data Product Name` AS Data_Product_Name,  -- Retain product name for filtering
        `Contract Start Date` AS Contract_Start_Date,  
        `Contract Expiry Date` AS Contract_Expiry_Date  
    FROM `rdmga4.RDMreports.contracts`
    WHERE CURRENT_DATE BETWEEN `Contract Start Date` AND `Contract Expiry Date`
),

-- Step 2: Extract consumer organization details
consumer_info AS (
    SELECT 
        SAFE_CAST(BPID AS STRING) AS consumer_id,  
        `Organization Name` AS consumer_name  
    FROM `rdmga4.RDMreports.raw_organization_overview`
),

-- Step 3: Extract product details while ensuring we only use the `Product Series Code`
product_info AS (
    SELECT 
        `Product Series Code` AS Product_Series_Code,  
        `Data Product Name` AS Data_Product_Name  
    FROM `rdmga4.RDMreports.raw_data_product_details`
    GROUP BY `Product Series Code`, `Data Product Name`
),

-- Step 4: Deduplicate data by keeping only one Product Series Code per Data Product Name per Consumer
deduplicated_data AS (
    SELECT 
        ac.Consumer_BPID,
        ac.Data_Product_Name,
        ac.Product_Series_Code,
        ac.Contract_Start_Date,
        ac.Contract_Expiry_Date,
        ROW_NUMBER() OVER (
            PARTITION BY ac.Consumer_BPID, ac.Data_Product_Name 
            ORDER BY ac.Contract_Start_Date DESC  -- Prioritize the most recent contract
        ) AS row_num
    FROM active_contracts ac
)

-- Step 5: Final selection, ensuring only one product series per consumer and product name
SELECT 
    ci.consumer_id AS pds_consumer_id,  
    ci.consumer_name AS pds_consumer_name,  
    dd.Product_Series_Code AS pds_product_series_code,  
    dd.Data_Product_Name AS pds_data_product_name,  
    dd.Contract_Start_Date AS pds_contract_start_date,  
    dd.Contract_Expiry_Date AS pds_contract_expiry_date  
FROM deduplicated_data dd
JOIN consumer_info ci 
    ON dd.Consumer_BPID = ci.consumer_id  
JOIN product_info pi
    ON dd.Product_Series_Code = pi.Product_Series_Code  
    AND dd.Data_Product_Name = pi.Data_Product_Name  -- Ensuring we map correctly
WHERE dd.row_num = 1;  -- Only keep one product series per consumer-product combination



---------------------------------------------------------------- Monthly correct
WITH monthly_dates AS (
    SELECT 
        CAST(FORMAT_DATE('%Y-%m-01', d) AS DATE) AS month_date
    FROM UNNEST(
        GENERATE_DATE_ARRAY('2023-01-01', CURRENT_DATE(), INTERVAL 1 MONTH)
    ) AS d
),
DeduplicatedContracts AS (
    SELECT
        CAST(`Contract Code` AS STRING)      AS Contract_Code,
        CAST(`Buyer BPID` AS STRING)         AS Buyer_BPID,
        CAST(`Seller BPID` AS STRING)        AS Seller_BPID,
        DATE(`Contract Start Date`)          AS Contract_Start_Date,
        DATE(`Contract Expiry Date`)         AS Contract_Expiry_Date,
        `Data Product Code`                  AS Data_Product_Code,
        `Contract Series Code`               AS Contract_Series_Code,
        ROW_NUMBER() OVER (
            PARTITION BY CAST(`Buyer BPID` AS STRING), `Contract Series Code`
            ORDER BY `Contract Start Date` ASC
        ) AS row_num
    FROM `rdmga4.RDMreports.contracts`
    WHERE 
          `Contract Start Date`   IS NOT NULL
      AND `Contract Expiry Date`  IS NOT NULL
      AND `Buyer BPID`           IS NOT NULL
),
ActivePeriods AS (
    SELECT
        Contract_Code,
        Buyer_BPID,
        Seller_BPID,
        Data_Product_Code,
        DATE_TRUNC(Contract_Start_Date, MONTH) AS start_month,
        DATE_TRUNC(
          DATE_ADD(Contract_Expiry_Date, INTERVAL 1 MONTH),
          MONTH
        ) AS end_month
    FROM DeduplicatedContracts
    WHERE row_num = 1
),
ActiveConnections AS (
    SELECT
        md.month_date AS active_month,
        ap.Contract_Code,
        ap.Buyer_BPID,
        ap.Seller_BPID,
        ap.Data_Product_Code
    FROM monthly_dates md
    JOIN ActivePeriods ap
      ON  md.month_date >= ap.start_month
      AND md.month_date <  ap.end_month
),
BuyerOrg AS (
    SELECT
        CAST(BPID AS STRING) AS bpid,
        `Organization Name`   AS org_name
    FROM `rdmga4.RDMreports.raw_organization_overview`
),
ProductInfo AS (
    SELECT
        `Data Product Code`   AS data_product_code,
        `Data Product Name`   AS data_product_name,
        `Product Series Code` AS product_series_code
    FROM `rdmga4.RDMreports.raw_data_product_details`
    GROUP BY 1, 2, 3
)
SELECT
    ac.active_month                              AS pds_active_month,
    bo.bpid                                      AS pds_consumer_id,
    bo.org_name                                  AS pds_consumer_name,
    pi.product_series_code                       AS pds_product_series_code,
    pi.data_product_name                         AS pds_data_product_name,
    dc.Contract_Start_Date                       AS pds_contract_start_date,
    dc.Contract_Expiry_Date                      AS pds_contract_expiry_date
FROM ActiveConnections ac
LEFT JOIN DeduplicatedContracts dc
       ON ac.Contract_Code = dc.Contract_Code
      AND dc.row_num = 1
LEFT JOIN BuyerOrg bo
       ON ac.Buyer_BPID = bo.bpid
LEFT JOIN ProductInfo pi
       ON ac.Data_Product_Code = pi.data_product_code
WHERE bo.org_name IS NOT NULL
  AND ac.active_month = DATE_TRUNC(CURRENT_DATE(), MONTH)  -- Only the current month
ORDER BY 
    pds_active_month, 
    pds_consumer_name, 
    pds_data_product_name




------------------------------------------------------------------- Daily correct
-- 1) Generate all days from some start date (e.g. 2023-01-01) to today
WITH daily_dates AS (
    SELECT d AS current_day
    FROM UNNEST(
        GENERATE_DATE_ARRAY('2023-01-01', CURRENT_DATE(), INTERVAL 1 DAY)
    ) AS d
),

-- 2) Deduplicate contracts exactly as in Query 1:
--    (Buyer_BPID, Contract Series Code), earliest start date
DeduplicatedContracts AS (
    SELECT
        CAST(`Contract Code` AS STRING)      AS Contract_Code,
        CAST(`Buyer BPID`   AS STRING)       AS Buyer_BPID,
        CAST(`Seller BPID`  AS STRING)       AS Seller_BPID,
        DATE(`Contract Start Date`)          AS Contract_Start_Date,
        DATE(`Contract Expiry Date`)         AS Contract_Expiry_Date,
        `Data Product Code`                  AS Data_Product_Code,
        `Contract Series Code`               AS Contract_Series_Code,
        ROW_NUMBER() OVER (
            PARTITION BY CAST(`Buyer BPID` AS STRING), `Contract Series Code`
            ORDER BY `Contract Start Date` ASC
        ) AS row_num
    FROM `rdmga4.RDMreports.contracts`
    WHERE 
          `Contract Start Date`  IS NOT NULL
      AND `Contract Expiry Date` IS NOT NULL
      AND `Buyer BPID`          IS NOT NULL
),

-- 3) For each (deduplicated) contract, list every day it's active
DailyActiveContracts AS (
    SELECT
        dd.current_day                    AS active_day,
        dc.Contract_Code                  AS Contract_Code,
        dc.Buyer_BPID                     AS Buyer_BPID,
        dc.Seller_BPID                    AS Seller_BPID,
        dc.Data_Product_Code              AS Data_Product_Code,
        dc.Contract_Start_Date,
        dc.Contract_Expiry_Date,
        dc.Contract_Series_Code
    FROM daily_dates dd
    JOIN DeduplicatedContracts dc
      ON dc.row_num = 1
     AND dd.current_day >= dc.Contract_Start_Date
     AND dd.current_day <= dc.Contract_Expiry_Date
),

-- 4) Buyer org info
BuyerOrg AS (
    SELECT
        CAST(BPID AS STRING) AS bpid,
        `Organization Name`   AS org_name
    FROM `rdmga4.RDMreports.raw_organization_overview`
),

-- 5) Product info
ProductInfo AS (
    SELECT
        `Data Product Code`   AS data_product_code,
        `Data Product Name`   AS data_product_name,
        `Product Series Code` AS product_series_code
    FROM `rdmga4.RDMreports.raw_data_product_details`
    GROUP BY 1,2,3
)

-- 6) Final query returning daily-level rows
SELECT
    dac.active_day                     AS pds_active_day,
    bo.bpid                            AS pds_consumer_id,
    bo.org_name                        AS pds_consumer_name,
    pi.product_series_code             AS pds_product_series_code,
    pi.data_product_name               AS pds_data_product_name,
    dac.Contract_Start_Date            AS pds_contract_start_date,
    dac.Contract_Expiry_Date           AS pds_contract_expiry_date
FROM DailyActiveContracts dac
LEFT JOIN BuyerOrg bo
       ON dac.Buyer_BPID = bo.bpid
LEFT JOIN ProductInfo pi
       ON dac.Data_Product_Code = pi.data_product_code
WHERE bo.org_name IS NOT NULL
-- Uncomment below if you want ONLY today's snapshot
  AND dac.active_day = CURRENT_DATE()
ORDER BY 
    dac.active_day, 
    bo.org_name, 
    pi.data_product_name


